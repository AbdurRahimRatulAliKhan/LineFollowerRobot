
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000096  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000096  0000010a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  0000010c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  000007d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  00000860  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000340  00000000  00000000  000008e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000ad  00000000  00000000  00000c20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000296  00000000  00000000  00000ccd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000f64  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000113  00000000  00000000  00000f88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000002e  00000000  00000000  0000109b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e6 e9       	ldi	r30, 0x96	; 150
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a0 36       	cpi	r26, 0x60	; 96
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	02 d0       	rcall	.+4      	; 0x5e <main>
  5a:	1b c0       	rjmp	.+54     	; 0x92 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <main>:
#include<avr/io.h>
#include<util/delay.h>

void main()
{
	DDRD=0xff;
  5e:	8f ef       	ldi	r24, 0xFF	; 255
  60:	81 bb       	out	0x11, r24	; 17
	DDRB=0xf0;
  62:	80 ef       	ldi	r24, 0xF0	; 240
  64:	87 bb       	out	0x17, r24	; 23
			case 0x01:
			PORTD=0x01; 
			break;

			case 0x02:
			PORTD=0x04;  
  66:	34 e0       	ldi	r19, 0x04	; 4
			break;

			case 0x03:
			PORTD=0x05;  
  68:	25 e0       	ldi	r18, 0x05	; 5
			case 0x00:
			PORTD=0x00; 
			break;

			case 0x01:
			PORTD=0x01; 
  6a:	91 e0       	ldi	r25, 0x01	; 1
	
	while(1)  
	{
		unsigned char a=0,b=0,c=0;

		c=PINB & 0x03;
  6c:	86 b3       	in	r24, 0x16	; 22
  6e:	83 70       	andi	r24, 0x03	; 3

		switch(c)
  70:	81 30       	cpi	r24, 0x01	; 1
  72:	49 f0       	breq	.+18     	; 0x86 <main+0x28>
  74:	81 30       	cpi	r24, 0x01	; 1
  76:	28 f0       	brcs	.+10     	; 0x82 <main+0x24>
  78:	82 30       	cpi	r24, 0x02	; 2
  7a:	39 f0       	breq	.+14     	; 0x8a <main+0x2c>
  7c:	83 30       	cpi	r24, 0x03	; 3
  7e:	b1 f7       	brne	.-20     	; 0x6c <main+0xe>
  80:	06 c0       	rjmp	.+12     	; 0x8e <main+0x30>
		{
			case 0x00:
			PORTD=0x00; 
  82:	12 ba       	out	0x12, r1	; 18
			break;
  84:	f3 cf       	rjmp	.-26     	; 0x6c <main+0xe>

			case 0x01:
			PORTD=0x01; 
  86:	92 bb       	out	0x12, r25	; 18
			break;
  88:	f1 cf       	rjmp	.-30     	; 0x6c <main+0xe>

			case 0x02:
			PORTD=0x04;  
  8a:	32 bb       	out	0x12, r19	; 18
			break;
  8c:	ef cf       	rjmp	.-34     	; 0x6c <main+0xe>

			case 0x03:
			PORTD=0x05;  
  8e:	22 bb       	out	0x12, r18	; 18
			break;
  90:	ed cf       	rjmp	.-38     	; 0x6c <main+0xe>

00000092 <_exit>:
  92:	f8 94       	cli

00000094 <__stop_program>:
  94:	ff cf       	rjmp	.-2      	; 0x94 <__stop_program>
